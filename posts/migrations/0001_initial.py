# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-04-03 16:19
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Center',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('center_id', models.CharField(max_length=30)),
                ('location', models.CharField(max_length=400)),
                ('latitude', models.DecimalField(decimal_places=10, max_digits=19, null=True)),
                ('longitude', models.DecimalField(decimal_places=10, max_digits=19, null=True)),
                ('address_line1', models.CharField(blank=True, max_length=300)),
                ('address_line2', models.CharField(blank=True, max_length=300)),
                ('address_line3', models.CharField(blank=True, max_length=300)),
                ('address_line4', models.CharField(blank=True, max_length=300)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('order', models.PositiveSmallIntegerField(default=0)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('published_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_id', models.CharField(max_length=30)),
                ('title', models.CharField(blank=True, max_length=200)),
                ('name', models.CharField(blank=True, max_length=200)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('phone', models.CharField(blank=True, max_length=30)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('published_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('center', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='posts.Center')),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cousre_id', models.CharField(max_length=30)),
                ('title', models.CharField(max_length=50)),
                ('featured_course', models.BooleanField(default=False)),
                ('background', models.ImageField(default='course/bg/default_course.jpg', help_text='Please upload an image of dimensions : width = 290px & height = 150px only', upload_to='course/bg')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('published_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CourseCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CourseDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cousre_details_id', models.CharField(max_length=30)),
                ('title', models.CharField(max_length=50)),
                ('details_text', models.TextField(blank=True, max_length=100000)),
                ('order', models.PositiveSmallIntegerField(default=0)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('published_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='posts.Course')),
            ],
        ),
        migrations.CreateModel(
            name='Division',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('division_id', models.CharField(max_length=30)),
                ('title', models.CharField(max_length=200)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('published_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30)),
                ('file', models.FileField(default='', help_text='Upload pdf / any text documents like brochures, syllabus etc.', upload_to='documents')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exam_id', models.CharField(max_length=30)),
                ('title', models.CharField(max_length=200)),
                ('sub_title', models.CharField(max_length=200)),
                ('details_text', models.TextField(blank=True, max_length=30000)),
                ('photo', models.ImageField(default='', upload_to='exam')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('published_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Mock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mock_id', models.CharField(max_length=30)),
                ('title', models.CharField(max_length=200)),
                ('sub_title', models.CharField(max_length=200)),
                ('text', models.TextField()),
                ('photo', models.ImageField(default='', upload_to='mock')),
                ('question_paper_url', models.CharField(default='', help_text='Please enter the question paper link.', max_length=200)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('published_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('news_id', models.CharField(max_length=30)),
                ('title', models.CharField(max_length=200)),
                ('sub_title', models.CharField(max_length=200)),
                ('text', models.TextField()),
                ('photo', models.ImageField(default='', upload_to='news')),
                ('youtube_url', models.CharField(blank=True, default='', help_text='Please enter the youtube url of the video.', max_length=200)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('published_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notice_id', models.CharField(max_length=30)),
                ('title', models.CharField(max_length=200)),
                ('sub_title', models.CharField(max_length=200)),
                ('text', models.TextField()),
                ('youtube_url', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('photo', models.ImageField(default='', help_text='Please upload an image of dimensions : width = 300px & height = 200px only', upload_to='notice')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('published_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('document', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='posts.Document')),
            ],
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result_id', models.CharField(max_length=30)),
                ('title', models.CharField(max_length=50)),
                ('featured_result', models.BooleanField(default=False)),
                ('details_text', models.TextField(blank=True, max_length=30000)),
                ('highlight_text', models.TextField(blank=True, max_length=3000)),
                ('background', models.ImageField(default='results/bg/default_result.jpg', help_text='Please upload an image of dimensions : width = 290px & height = 150px only', upload_to='results/bg')),
                ('batch', models.CharField(blank=True, max_length=50)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('published_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='posts.CourseCategory')),
            ],
        ),
        migrations.CreateModel(
            name='SiteConfiguration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('support_email', models.EmailField(blank=True, default='support@tandemglobal.com', max_length=254)),
                ('phone', models.CharField(blank=True, default='+91 484-3040175', max_length=30)),
                ('address', models.CharField(blank=True, default='2ND FLOOR, STR COMPLEX,\n VEEKSHANAM ROAD, \n OPP. INTERNATIONAL HOTEL, \n ERNAKULAM 682035.', max_length=300)),
                ('slider_title_line1', models.CharField(default='MOST', max_length=4)),
                ('slider_title_line2', models.CharField(default='TRUSTED', max_length=7)),
                ('slider_subtitle', models.CharField(default='EDUCATION BRAND OF KERALA', max_length=27)),
                ('slider_years', models.CharField(default='23', max_length=2)),
                ('slider_years_caption', models.CharField(default='Trusted Years', max_length=14)),
                ('slider_background', models.ImageField(default='slider/slider1.jpg', help_text='Please upload an image of dimensions : width = 1370 px & height = 550px only', upload_to='slider')),
                ('twitter_url', models.CharField(blank=True, default='#', max_length=255)),
                ('facebook_url', models.CharField(blank=True, default='#', max_length=255)),
                ('google_url', models.CharField(blank=True, default='#', max_length=255)),
                ('linkedin_url', models.CharField(blank=True, default='#', max_length=255)),
                ('youtube_channel_url', models.CharField(blank=True, default='#', max_length=255)),
                ('training_methodology', models.TextField(blank=True, max_length=3000)),
                ('boards_message', models.TextField(blank=True, max_length=3000)),
                ('boards_photo', models.ImageField(blank=True, default='methodology/board.jpg', upload_to='methodology')),
                ('methodology_image', models.ImageField(blank=True, default='methodology/method.jpg', upload_to='methodology')),
                ('aboutus_text', models.TextField(blank=True, max_length=8000)),
                ('about_tandem_image', models.ImageField(blank=True, default='about/about_tandem.jpg', help_text='Please upload an image of dimensions : width = 500 px & height = 300px only', upload_to='about')),
                ('partner_text', models.TextField(blank=True, max_length=3000)),
                ('company_info', models.TextField(blank=True, max_length=3000)),
                ('company_info_footer', models.TextField(blank=True, max_length=3000)),
                ('company_logo', models.ImageField(default='logo/eduexcel-logo.png', upload_to='logo')),
                ('popup_enabled', models.BooleanField(default=False, verbose_name='Enable Popup in Home Page')),
                ('popup_title', models.CharField(blank=True, default='Attention', max_length=255)),
                ('popup_text', models.CharField(blank=True, default='', max_length=3000)),
                ('popup_image', models.ImageField(default='home/popup.jpg', help_text='Please upload an image of dimensions : width = 400 px & height = 264px only', upload_to='home')),
            ],
            options={
                'verbose_name': 'Site Configuration',
            },
        ),
        migrations.CreateModel(
            name='Slogan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slogan_id', models.CharField(max_length=30)),
                ('title', models.CharField(max_length=200)),
                ('sub_title', models.CharField(max_length=200)),
                ('text', models.TextField()),
                ('icon', models.ImageField(blank=True, default='slogan/icon/teacher-teaching-with-a-stick.png', help_text='Add an icon of dimensions 80px*80px', upload_to='slogan/icon')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('published_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Stream',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30)),
                ('order', models.PositiveSmallIntegerField(default=0)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('testimonial_id', models.CharField(max_length=30)),
                ('student_title', models.CharField(max_length=200)),
                ('student_name', models.CharField(max_length=200)),
                ('student_photo', models.ImageField(default='', upload_to='testimonial/student')),
                ('background', models.ImageField(default='', upload_to='testimonial/bg')),
                ('text', models.TextField()),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('published_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='posts.Course')),
            ],
        ),
        migrations.CreateModel(
            name='TopScorer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('top_scorer_id', models.CharField(max_length=30)),
                ('student_name', models.CharField(max_length=50)),
                ('student_title', models.CharField(max_length=50)),
                ('student_photo', models.ImageField(default='', upload_to='results/student')),
                ('batch', models.CharField(blank=True, max_length=50)),
                ('featured_top_scorer', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('published_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='posts.Course')),
                ('result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='posts.Result')),
            ],
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video_id', models.CharField(max_length=30)),
                ('title', models.CharField(max_length=200)),
                ('sub_title', models.CharField(max_length=200)),
                ('youtube_url', models.CharField(default='', max_length=200)),
                ('photo', models.ImageField(default='', upload_to='video')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('published_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='coursecategory',
            name='stream',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='posts.Stream'),
        ),
        migrations.AddField(
            model_name='course',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='posts.CourseCategory'),
        ),
        migrations.AddField(
            model_name='course',
            name='document',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='posts.Document'),
        ),
        migrations.AddField(
            model_name='contact',
            name='division',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='posts.Division'),
        ),
    ]
